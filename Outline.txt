📊 Data Cleaning Tasks
  - Load athlete_events.csv into your notebook.
  - Rename columns for consistency (e.g. lowercase, underscore formatting).
  - Drop rows missing Height, Weight, Age, or Medal.
  - Create a binary column: Medal = 1, No Medal = 0
  - Final tidy structure: each row is one athlete-event observation.

📈 Exploratory Visuals
  - Histograms of Height, Weight, Age
  - Boxplots comparing medalists vs non-medalists for each trait
  - Pairplot for Height, Weight, Age, colored by medal status
  - Correlation heatmap of all numeric variables --> sns.heatmap(df.corr(), annot=True)

💭 Research Framing
  - Final research question: “Do physical traits predict Olympic medal success?”
  - Hypothesis: “Medalists tend to have distinct physical profiles compared to non-medalists.”
  - Discuss data biases: Uneven sport representation, Country-level disparities, Missing variables (e.g. training experience, coaching quality)

🧼 Wrangle & Prep
  - Standardize numeric variables: 
      from sklearn.preprocessing import StandardScaler
      scaler = StandardScaler()
      X_scaled = scaler.fit_transform(df[['Height', 'Weight', 'Age']])

  - Subset cleaned data for training/testing
      from sklearn.model_selection import train_test_split
      X_train, X_test, y_train, y_test = train_test_split(X_scaled, df['Medalist'], test_size=0.2)

🔍 Modeling
📊 Logistic Regression
  - Fit a basic classifier
      from sklearn.linear_model import LogisticRegression
      model = LogisticRegression()
      model.fit(X_train, y_train)

🤖 K-Nearest Neighbors (KNN)
  - Try KNN classifier
      from sklearn.neighbors import KNeighborsClassifier
      knn = KNeighborsClassifier(n_neighbors=5)
      knn.fit(X_train, y_train)

🎯 Evaluation
  - Accuracy, precision, recall, F1 score
      from sklearn.metrics import classification_report
      print(classification_report(y_test, model.predict(X_test)))
  - Confusion matrix plot
  - Interpret which traits were most important for classification

🎨 Refine Visualizations
  - Create final pairplot, boxplots, and classifier result charts
  - Add titles, color coding, axis labels
  - Annotate significant differences (mean ± std deviation, asterisks)
  - Use consistent style, font, and layout across visuals
